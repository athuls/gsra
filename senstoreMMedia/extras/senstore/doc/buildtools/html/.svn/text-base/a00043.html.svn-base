<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>SenStore: Package buildtools.dbdef</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Generated by Doxygen 1.7.1 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li class="current"><a href="namespaces.html"><span>Packages</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
    </ul>
  </div>
  <div class="tabs2">
    <ul class="tablist">
      <li><a href="namespaces.html"><span>Packages</span></a></li>
      <li><a href="namespacemembers.html"><span>Package&nbsp;Functions</span></a></li>
    </ul>
  </div>
  <div class="navpath">
    <ul>
      <li><b>buildtools</b>      </li>
      <li><a class="el" href="a00043.html">dbdef</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<h1>Package buildtools.dbdef</h1>  </div>
</div>
<div class="contents">

<p>This package provides a tool for converting a database definition (using the domain specific database definition language) to an in-memory variable definition tree.  
<a href="#_details">More...</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00036.html">Vars</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Dictionary class for holding variables.  <a href="a00036.html#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00010.html">DatabaseVars</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Variable data set for the storing database definition.  <a href="a00010.html#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00031.html">SyntaxObject</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Abstract base class for a syntax object.  <a href="a00031.html#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00009.html">Comment</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight"><a class="el" href="a00009.html" title="Comment syntax element object class.">Comment</a> syntax element object class.  <a href="a00009.html#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00011.html">DocString</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Document string syntax element object class.  <a href="a00011.html#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00015.html">EnumName</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Enumeration name syntax element object class.  <a href="a00015.html#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00007.html">ClassName</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Class name syntax element object class.  <a href="a00007.html#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00004.html">BaseClassName</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Base class name syntax element object class.  <a href="a00004.html#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00032.html">TagName</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Tag name syntax element object class.  <a href="a00032.html#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00035.html">VarName</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Variable name syntax element object class.  <a href="a00035.html#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00028.html">RefName</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Object reference name syntax element object class.  <a href="a00028.html#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00033.html">TypeName</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Variable or reference type syntax element object class.  <a href="a00033.html#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00034.html">VarDef</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Variable definition syntax element object class.  <a href="a00034.html#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00027.html">RefDef</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Object reference definition syntax element object class.  <a href="a00027.html#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00006.html">ClassDef</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Class definition syntax element object class.  <a href="a00006.html#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00014.html">EnumElem</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Enumeration element definition syntax element object class.  <a href="a00014.html#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00013.html">EnumDef</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Enumeration definition syntax element object class.  <a href="a00013.html#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00003.html">ArrayDef</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Array definition syntax element object class.  <a href="a00003.html#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00030.html">SignalDef</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Signal definition syntax element object class.  <a href="a00030.html#_details">More...</a><br/></td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">def&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00043.html#a5e63864cd7910e7b0cead01432da54d3">getSyntax</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Builds the Database-definition language syntax.  <a href="#a5e63864cd7910e7b0cead01432da54d3"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">def&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00043.html#a4e64c1eb0bd708b64ba344d1c1883427">process</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Parses the database definition and returns the corresponding variable tree definition.  <a href="#a4e64c1eb0bd708b64ba344d1c1883427"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">def&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00043.html#a2d13f0ec03432fac3f21b2289b943de4">read</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Parses the variable definition file and adds internal variables.  <a href="#a2d13f0ec03432fac3f21b2289b943de4"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="var-members"></a>
Variables</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3bbc829efe20d94813bf53e8dd7b5ddb"></a><!-- doxytag: member="buildtools::dbdef::_syntax" ref="a3bbc829efe20d94813bf53e8dd7b5ddb" args="" -->
tuple&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00043.html#a3bbc829efe20d94813bf53e8dd7b5ddb">_syntax</a> = getSyntax()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Pre-build syntax. <br/></td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>This package provides a tool for converting a database definition (using the domain specific database definition language) to an in-memory variable definition tree. </p>
<p>The database definition language resembles C++, and allows the definition of enumerations and classes. <b>Enumerations</b> allow the definition of database fields that have a predefined number of options. The documentation strings (inspired by JavaDoc / Doxygen) are scanned as well, and can be used in the template.</p>
<div class="fragment"><pre class="fragment">
 enum SomeName {
  /** Documentation string goes here. */
  LABEL1,
  /** Documentation string goes here. */
  LABEL2
 };</pre></div><p><b>Classes</b> allow the definition of objects that contain variables and references to other objects.</p>
<div class="fragment"><pre class="fragment">
 /** Some base class. */
 class SomeBaseClass {
   /** Some integer variable (to be stored in HDF5). */
   @hdf int32 count;
 };

 /** Some derived class. */
 class SomeClass(SomeBaseClass) {
   /** Some string variable. */
   string name;
 };

 /** Some other class. */
 class SomeOtherClass {
   /** A link to an object of another class. */
   SomeClass *buddy;
 };</pre></div><p>The database code generation will automatically add an id variable to each base class, and use that in uniquely identifying an object (a primary key in SQL), and to link to other objects (a foreign key in SQL). The variable types can be anything in theory, but must be supported by the template and any type mapping function. Reference variables are set as <code>'class' = 'ref'</code>, and normal variable as <code>'class' = 'var'</code>, which can be used in the template to differentiate between them. Members can be tagged to indicate where they will be stored. Currently all regular fields are stored in the SQL database by default, unless they are tagged by '@hdf', in which case they are stored in HDF5.</p>
<p>Members can also be tagged with '@parent' to indicate that the member refers to a parent object. This can be used in the code generation to generate methods for getting the children of parent object types. Note that this tag is only relevant for object link fields.</p>
<p><b>Arrays</b> allow the definition of multi-dimensional arrays that map variables, <em>e.g.</em> the force-to-displacement mapping (elasticity). The array data itself is stored in HDF5.</p>
<div class="fragment"><pre class="fragment">
 /** Linear mapping between two node-related quantities. */
 array NodeMapping(float64) {
   /** Parent structure */
   Structure *struct;
   /** Short name */
   string name;
   /** Description */
   string description;
   /** Output quantity */
   Quantity *outputQuantity;
   /** Input quantity */
   Quantity *inputQuantity;
   axes {
     /** Output node */
     Node *outputNode;
     /** Input node */
     Node *inputNode;
   };
 };</pre></div><p><b>Signals</b> allow the definition of multi-dimensional arrays with an additional time dimension, <em>e.g.</em> strain measurements over time. The signal data itself is stored in HDF5.</p>
<div class="fragment"><pre class="fragment">
 /** Strain sensor readings. */
 signal StrainMeasurement(float32) {
   /** Parent structure */
   Structure *struct;
   /** Short name */
   string name;
   /** Description */
   string description;
   /** Output quantity */
   axes {
     /** Sensor. */
     Sensor *sensor;
   };
 };</pre></div> <hr/><h2>Function Documentation</h2>
<a class="anchor" id="a5e63864cd7910e7b0cead01432da54d3"></a><!-- doxytag: member="buildtools::dbdef::getSyntax" ref="a5e63864cd7910e7b0cead01432da54d3" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def buildtools.dbdef.getSyntax </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Builds the Database-definition language syntax. </p>

</div>
</div>
<a class="anchor" id="a4e64c1eb0bd708b64ba344d1c1883427"></a><!-- doxytag: member="buildtools::dbdef::process" ref="a4e64c1eb0bd708b64ba344d1c1883427" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def buildtools.dbdef.process </td>
          <td>(</td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname"> <em>dbdFilename</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Parses the database definition and returns the corresponding variable tree definition. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>dbdFilename</em>&nbsp;</td><td>database file name (input) </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>variable tree definition </dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="a00036.html" title="Dictionary class for holding variables.">Vars</a> </dd>
<dd>
<a class="el" href="a00043.html#a2d13f0ec03432fac3f21b2289b943de4" title="Parses the variable definition file and adds internal variables.">read()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a2d13f0ec03432fac3f21b2289b943de4"></a><!-- doxytag: member="buildtools::dbdef::read" ref="a2d13f0ec03432fac3f21b2289b943de4" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def buildtools.dbdef.read </td>
          <td>(</td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname"> <em>defFile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname"> <em>basename</em> = <code>'SenStore'</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Parses the variable definition file and adds internal variables. </p>
<p>The resulting variable definition contains all the database variables and code generatation variables. The variable definition is a tree of Python Vars() objects and Python lists. The Vars() objects act like dictionaries, with added functionality of accessing keys as members: <code>vars.enumDefs</code> is a short-hand for <code>vars['enumDefs']</code>. For example, looping over all enumeration definitions can be done as follows:</p>
<div class="fragment"><pre class="fragment">
 for enumDef in vars.enumDefs:
   print enumDef.sqlName
   for member in enumDef.members:
      print '  ' + member.name</pre></div><p>The variable definition contains, among others, the following data:</p>
<p>Database definition lists:</p>
<ul>
<li><code>vars.enumDefs:</code> list of database enumerations</li>
<li><code>vars.classDefs:</code> list of database classes</li>
<li><code>vars.arrayDefs:</code> list of database arrays</li>
<li><code>vars.signalDefs:</code> list of database signals</li>
</ul>
<p>Names of generated Python packages:</p>
<ul>
<li><code>vars.hdf5PyPackage:</code> HDF5 database access</li>
<li><code>vars.pgdbPyPackage:</code> PostgreSQL database access</li>
<li><code>vars.icePyPackage:</code> ZeroC Ice database interface</li>
<li><code>vars.serverPyPackage:</code> Transparent access to HDF5 and PostgreSQL databases</li>
<li><code>vars.clientPyPackage:</code> Utility functions to connect to database</li>
</ul>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>defFile</em>&nbsp;</td><td>variable definition file name </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>basename</em>&nbsp;</td><td>base name of database (Capitalized) </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>variable definition </dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="a00043.html#a4e64c1eb0bd708b64ba344d1c1883427" title="Parses the database definition and returns the corresponding variable tree definition.">process()</a> </dd></dl>

</div>
</div>
</div>
<hr class="footer"/><address class="footer"><small>Generated on Tue Sep 7 2010 11:34:34 for SenStore by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.1 </small></address>
</body>
</html>
