################################################################################
# META_TRAINER CONFIGURATION
# Note: variables starting with "meta_" are reserved for meta configuration

# required variables
meta_command = "export LD_LIBRARY_PATH=. && mnist_train"

# optional meta variables ######################################################

# name of this meta job
meta_name = mnist_${machine}
# maximum number of cpus to use at the same time
meta_max_cpus = 8
# directory where to write outputs of all processes
meta_output_dir = ${root}/../out/
# extra gnuplot parameters
meta_gnuplot_params="set yrange [.7:4];set grid ytics;set ytics;set mytics;set grid mytics;set logscale y; set mxtics; set grid xtics; "

# analyze processes output or not. if 0, the meta_trainer will have no notion
# of iteration and will only send 1 report at the very end.
# if 1, meta_trainer will try to find iteration and other variable values
# in each process' output.
meta_analyze = 1

# emailing results or not
meta_send_email = 1
# email to use (use environment variable "myemail")
meta_email = ${myemail}
# iterations at which to send an email
meta_email_iters = 0,1,5,10,20,50,100,200
# send email with this frequency (if email_iters not defined)
meta_email_period = 1

# interval in seconds to analyze processes output, and to check who is alive.
meta_watch_interval = 120
# variables to minimize, process and iteration with lowest value will
# be used to report best weights, or start consequent training
meta_minimize = test_errors,errors,test_energy,energy
# variables to keep around at each iterations
meta_sticky_vars = job,config,classes
# send n best answers that minimize meta_minimize's value
meta_send_best = 5

################################################################################
# LOCAL PROGRAM CONFIGURATION

machine = texier

# training #####################################################################

#root = /home/sermanet/${machine}adata/mnist/ds/
root = /data/mnist/
train_name = #mnist_train1
test_name = #mnist_val1
min_sample_weight = .0 1 # 0.0 .1 .2 1
eta = .0001 .00001
iterations = 150
training_size = 2000 # 60000
testing_size = 1000 # 10000
absnorm = 1
wsamples = 1
wnorm = 0
shuffle_passes = 1
fixed_randomization = 1

# training display #############################################################
show_train = 1 # enable/disable all training display
show_train_ninternals = 0 # number of internal examples to display
show_train_errors = 1 # show worst errors on training set
show_val_errors = 1 # show worst errors on validation set
show_val_correct = 1 # show worst errors on validation set
show_hsample = 20 # number of samples to show on height axis
show_wsample = 40 # number of samples to show on height axis
